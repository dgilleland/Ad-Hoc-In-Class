@{
    Page.Title = "Create Bank Account";
    Layout = "~/_Layout.cshtml";

    // Get a reference to my database object
    var db = WebMatrix.Data.Database.Open("Mixed"); // opens a connection to the database
}

<div>
    <h1>@Page.Title</h1>

    <p>This illustrates some basic controls for creating a bank account.</p>
    <blockquote>
        @{
            // Get all the bank accounts to display them
            var query = "SELECT AccountNumber, AccountHolder, OpeningBalance, OverdraftLimit, AccountType FROM BankAccounts";
            try
            {
                var data = db.Query(query);
                // display all the data
                foreach (var row in data)
                {
                    <div>@row.AccountHolder has a @row.AccountType account.</div>
                }
            }
            catch (Exception ex)
            {
                <p>ERROR - @ex.Message</p>
            }
        }
    </blockquote>
    @{
    if (IsPost)
        {
            BankAccount account = new BankAccount();
            account.AccountHolder = Request["accountHolder"];
            account.AccountNumber = Request["accountNumber"];
            decimal temp;
            if (decimal.TryParse(Request["openingBalance"], out temp))
            {
                account.OpeningBalance = temp;
            }
            if (decimal.TryParse(Request["overdraftLimit"], out temp))
            {
                account.OverdraftLimit = temp;
            }
            AccountType tempType;
            if (Enum.TryParse<AccountType>(Request["accountType"], false, out tempType))
            {
                account.AccountType = tempType;
            }

            string sql = "INSERT INTO BankAccounts(AccountNumber, AccountHolder, OpeningBalance, OverdraftLimit, AccountType) VALUES (@0, @1, @2, @3, @4)";
            try
            {
                db.Execute(sql, account.AccountNumber, account.AccountHolder, account.OpeningBalance, account.OverdraftLimit, account.AccountType.ToString());
                // Success!
                <p>
                    An @account.AccountType account has been created for @account.AccountHolder with an opening balance of $ @account.OpeningBalance.
                </p>
            }
            catch (Exception ex)
            {
                <p style="color:darkred; font-size:1.25em; font-weight:bold;">ERROR! @ex.Message</p>
            }

        }
    }

    <form method="post">
        <p>fill in the following form and click submit.</p>
        <fieldset>
            <legend>Account Details</legend>
            <label for="accountHolder">Account Holder</label>
            <input type="text" name="accountHolder" />

            <label for="accountNumber">Account Number</label>
            <input type="text" name="accountNumber" />

            <label for="openingBalance">Opening Balance</label>
            <input type="number" name="openingBalance" />

            <label for="overdraftLimit">Overdraft Limit</label>
            <input type="number" name="overdraftLimit" />

            <label for="accountType">Account Type</label>
            <select name="accountType">
                <option value="Chequing">Chequing</option>
                <option value="Savings">Savings</option>
                <option value="Credit">Credit</option>
            </select>

            <br />
            <input type="submit" value="Submit" />
        </fieldset>
    </form>
</div>